// âœ… 1. Operadores AritmÃ©ticos
// Usados para cÃ¡lculos matemÃ¡ticos.

// Operador	DescriÃ§Ã£o	Exemplo (C#/JS)
// +	Soma	2 + 3 â†’ 5
// -	SubtraÃ§Ã£o	5 - 2 â†’ 3
// *	MultiplicaÃ§Ã£o	4 * 2 â†’ 8
// /	DivisÃ£o	10 / 2 â†’ 5
// %	MÃ³dulo	10 % 3 â†’ 1
// ++	Incremento	x++ â†’ aumenta x
// --	Decremento	x-- â†’ diminui x

// âœ… 2. Operadores Relacionais (ComparaÃ§Ã£o)
// Usados para comparar valores. Resultado Ã© true ou false.

// Operador	Significado	Exemplo
// ==	Igual	5 == '5' (JS) â†’ true
// ===	Igual estrito	5 === '5' (JS) â†’ false
// !=	Diferente	5 != 3 â†’ true
// !==	Diferente estrito	5 !== '5' (JS) â†’ true
// >	Maior	5 > 3 â†’ true
// <	Menor	5 < 3 â†’ false
// >=	Maior ou igual	5 >= 5 â†’ true
// <=	Menor ou igual	4 <= 5 â†’ true

// ðŸ’¡ Em C# nÃ£o existe ===, porque os tipos sÃ£o verificados automaticamente.

// âœ… 3. Operadores LÃ³gicos
// Usados para combinar condiÃ§Ãµes.

// Operador	Nome	Exemplo	Resultado
// &&	E lÃ³gico	true && false	false
// `		`	OU lÃ³gico
// !	NegaÃ§Ã£o	!true	false

// âœ… 4. Operadores de AtribuiÃ§Ã£o
// Usados para atribuir valores a variÃ¡veis.

// Operador	Exemplo	Significado
// =	x = 10	Atribui 10 a x
// +=	x += 2	x = x + 2
// -=	x -= 3	x = x - 3
// *=	x *= 4	x = x * 4
// /=	x /= 5	x = x / 5
// %=	x %= 2	x = x % 2

// âœ… 5. Operador TernÃ¡rio
// Atalho para if/else simples.

// csharp
// Copiar
// Editar
// int idade = 20;
// string resultado = idade >= 18 ? "Maior de idade" : "Menor de idade";
// js
// Copiar
// Editar
// let idade = 20;
// let resultado = idade >= 18 ? "Maior de idade" : "Menor de idade";
// âœ… 6. Operadores Bitwise (avanÃ§ado)
// Usados para manipular bits (&, |, ^, ~, <<, >>) â€“ raramente usados em sistemas web, mas aparecem em algoritmos.

